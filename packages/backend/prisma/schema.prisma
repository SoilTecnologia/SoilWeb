generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   String     @id @default(uuid())
  login     String     @unique
  password  String
  user_type UserType   @default(USER)
  farms     FarmUser[]
}

model Farm {
  farm_id   String     @id @default(uuid())
  farm_name String
  city      String
  lng       Float
  lat       Float
  gateway   String
  nodes     Node[]
  users     FarmUser[]
}

model FarmUser {
  farm_user_id   String       @id @default(uuid())
  farm_user_type FarmUserType
  farm           Farm         @relation(fields: [farm_id], references: [farm_id])
  farm_id        String
  user           User         @relation(fields: [user_id], references: [user_id])
  user_id        String
}

model Node {
  node_id String     @id @default(uuid())
  node_name String
  pivots  Pivot[]
  isGPRS  Boolean
  Farm    Farm    @relation(fields: [farm_id], references: [farm_id])
  farm_id String
}

model Pivot {
  pivot_id    String   @id @default(uuid())
  pivot_name  String
  lng         Float
  lat         Float
  start_angle Int
  end_angle   Int
  radius      Float
  node_id     String
  updatedAt   DateTime @updatedAt
  node        Node     @relation(fields: [node_id], references: [node_id])
  cycles      Cycle[]
  intents     Intent[]
  radio       Radio?
}

model Cycle {
  cycle_id     String       @id @default(uuid())
  is_running   Boolean      @default(true)
  pivot_id     String
  updatedAt    DateTime     @updatedAt
  pivot        Pivot        @relation(fields: [pivot_id], references: [pivot_id])
  cycle_states CycleState[]
  cycle_variables CycleVariable[]
}

model Intent {
  intent_id      String           @id @default(uuid())
  power          PowerState
  water          Intent_water
  direction      Intent_direction
  percentimenter Int
  pivot_id       String @unique 
  updatedAt      DateTime         @updatedAt
  pivot          Pivot            @relation(fields: [pivot_id], references: [pivot_id])
}

model Radio {
  radio_id  String      @id @default(uuid())
  radio_name String
  updatedAt DateTime @updatedAt
  Pivot     Pivot    @relation(fields: [pivot_id], references: [pivot_id])
  pivot_id  String  
  radio_variables RadioVariable[]
}

model RadioVariable {
  radio_variable_id String @id @default(uuid())
  rssi      Int @default(0)
  rank      Int @default(0)
  father    String @default("null")
  updateAt DateTime @updatedAt
  radio_id String
  radio       Radio @relation(fields: [radio_id], references: [radio_id])
}

model CycleState {
  cycle_state_id  String          @id @default(uuid())
  water           WaterState
  direction       DirectionState
  connection      ConnectionState
  start_angle     Int
  end_angle       Int
  cycle_id        String
  updatedAt       DateTime        @updatedAt
  cycle           Cycle           @relation(fields: [cycle_id], references: [cycle_id])
  cycle_variables CycleVariable[]
}

model CycleVariable {
  cycle_variable_id String     @id @default(uuid())
  angle             Int
  percentimeter     Int
  pressure          Int
  cycle_state_id    String
  cycle_id  String
  updatedAt         DateTime   @updatedAt
  cycle_state       CycleState @relation(fields: [cycle_state_id], references: [cycle_state_id])
  cycle       Cycle @relation(fields: [cycle_id], references: [cycle_id])
}

enum UserType {
  SUDO
  USER
}

enum FarmUserType {
  WORKER
  MANAGER
  ADMIN
}

enum PowerState {
  NULL
  ON
  OFF
}

enum WaterState {
  NULL
  DRY
  WET
}

enum DirectionState {
  NULL
  CLOCKWISE
  ANTI_CLOCKWISE
}

enum ConnectionState {
  ONLINE
  OFFLINE
}

enum Intent_water {
  NULL
  DRY
  WET
}

enum Intent_direction {
  NULL
  CLOCKWISE
  ANTI_CLOCKWISE
}
