{
    "sourceFile": "backend/src/schedule/SendAction.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1651588804653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1651590364059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const cron = require('node-cron');\n+import cron from 'node-cron';\n import express from 'express';\n \n var app = express();\n const api = 'http://localhost:3308/';\n"
                },
                {
                    "date": 1651590591314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,10 @@\n }\n \n app.get('/scheduling/getAllScheduling', (req, res) => {});\n \n-module.exports = cron.schedule('*/1 * * * *', SendAction, {\n+const cronJob = cron.schedule('*/1 * * * *', SendAction, {\n   scheduled: false,\n   timezone: 'America/Sao_Paulo'\n });\n+\n+export default cronJob;\n"
                },
                {
                    "date": 1651590837633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,25 @@\n import cron from 'node-cron';\n import express from 'express';\n+import { container } from 'tsyringe';\n+import { GetAllSchedulingUseCase } from '../useCases/Scheduling/GetAllScheduling/GetAllSchedulingUseCase';\n \n var app = express();\n const api = 'http://localhost:3308/';\n \n function SendAction() {\n   console.log('Enviar action quando necess치rio');\n }\n \n-app.get('/scheduling/getAllScheduling', (req, res) => {});\n+const getAllSchedulling() => {\n+  const getAllSchedullingUseCase = container.resolve(GetAllSchedulingUseCase);\n+const shcedulling = await getAllSchedullingUseCase.execute()\n+}\n \n+// app.get('/scheduling/getAllScheduling', (req, res) => {\n+//   const scheduling = req.body\n+// });\n+\n const cronJob = cron.schedule('*/1 * * * *', SendAction, {\n   scheduled: false,\n   timezone: 'America/Sao_Paulo'\n });\n"
                },
                {
                    "date": 1651590843902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n function SendAction() {\n   console.log('Enviar action quando necess치rio');\n }\n \n-const getAllSchedulling() => {\n+const getAllSchedulling = async () => {\n   const getAllSchedullingUseCase = container.resolve(GetAllSchedulingUseCase);\n-const shcedulling = await getAllSchedullingUseCase.execute()\n-}\n+  const shcedulling = await getAllSchedullingUseCase.execute();\n+};\n \n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n"
                },
                {
                    "date": 1651591015135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,16 @@\n }\n \n const getAllSchedulling = async () => {\n   const getAllSchedullingUseCase = container.resolve(GetAllSchedulingUseCase);\n-  const shcedulling = await getAllSchedullingUseCase.execute();\n+  const schedulling = await getAllSchedullingUseCase.execute();\n+  return schedulling\n };\n \n+const getDateSchedulling = (date: Date) => {\n+  const dateString = date.toLocaleString(\"pt-BR,\" {timezone: 'America/Sao_Paulo'})\n+}\n+\n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n \n"
                },
                {
                    "date": 1651591027687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   return schedulling\n };\n \n const getDateSchedulling = (date: Date) => {\n-  const dateString = date.toLocaleString(\"pt-BR,\" {timezone: 'America/Sao_Paulo'})\n+  const dateString = date.toLocaleString(\"pt-BR,\" {timeZone: 'America/Sao_Paulo'})\n }\n \n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n"
                },
                {
                    "date": 1651591324473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,17 @@\n   return schedulling\n };\n \n const getDateSchedulling = (date: Date) => {\n-  const dateString = date.toLocaleString(\"pt-BR,\" {timeZone: 'America/Sao_Paulo'})\n+  const dateString = date.toLocaleString(\"pt-BR,\" {\n+    timeZone: 'America/Sao_Paulo', dateStyle: \"short\", timeStyle: \"full\"})\n+  \n+  const dateSplit = dateString.split(\" \");\n+  const dateFull = dateSplit[0].split(\"/\");\n+  const timeFull = dateSplit[1].split(\":\")\n+\n+  const [day, month, year] = dateFull\n+  const [hour, minute, second] = timeFull\n }\n \n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n"
                },
                {
                    "date": 1651591347199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n   const timeFull = dateSplit[1].split(\":\")\n \n   const [day, month, year] = dateFull\n   const [hour, minute, second] = timeFull\n+\n+  return {day, month, year, hour, minute, second}\n }\n \n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n"
                },
                {
                    "date": 1651591357999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,25 +12,28 @@\n \n const getAllSchedulling = async () => {\n   const getAllSchedullingUseCase = container.resolve(GetAllSchedulingUseCase);\n   const schedulling = await getAllSchedullingUseCase.execute();\n-  return schedulling\n+  return schedulling;\n };\n \n const getDateSchedulling = (date: Date) => {\n-  const dateString = date.toLocaleString(\"pt-BR,\" {\n-    timeZone: 'America/Sao_Paulo', dateStyle: \"short\", timeStyle: \"full\"})\n-  \n-  const dateSplit = dateString.split(\" \");\n-  const dateFull = dateSplit[0].split(\"/\");\n-  const timeFull = dateSplit[1].split(\":\")\n+  const dateString = date.toLocaleString('pt-BR,', {\n+    timeZone: 'America/Sao_Paulo',\n+    dateStyle: 'short',\n+    timeStyle: 'full'\n+  });\n \n-  const [day, month, year] = dateFull\n-  const [hour, minute, second] = timeFull\n+  const dateSplit = dateString.split(' ');\n+  const dateFull = dateSplit[0].split('/');\n+  const timeFull = dateSplit[1].split(':');\n \n-  return {day, month, year, hour, minute, second}\n-}\n+  const [day, month, year] = dateFull;\n+  const [hour, minute, second] = timeFull;\n \n+  return { day, month, year, hour, minute, second };\n+};\n+\n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n \n"
                },
                {
                    "date": 1651592982599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,29 @@\n import cron from 'node-cron';\n import express from 'express';\n-import { container } from 'tsyringe';\n-import { GetAllSchedulingUseCase } from '../useCases/Scheduling/GetAllScheduling/GetAllSchedulingUseCase';\n+import { SchedulingModel } from '../database/model/Scheduling';\n \n var app = express();\n const api = 'http://localhost:3308/';\n \n+class SendSchedulingListening {\n+  private job: SchedulingModel;\n+\n+  constructor(newJob: SchedulingModel) {\n+    this.job = newJob;\n+  }\n+\n+  addListening(newJob: SchedulingModel) {\n+    this.job = newJob;\n+  }\n+}\n+\n+export { SendSchedulingListening };\n+\n function SendAction() {\n   console.log('Enviar action quando necess치rio');\n }\n \n-const getAllSchedulling = async () => {\n-  const getAllSchedullingUseCase = container.resolve(GetAllSchedulingUseCase);\n-  const schedulling = await getAllSchedullingUseCase.execute();\n-  return schedulling;\n-};\n-\n const getDateSchedulling = (date: Date) => {\n   const dateString = date.toLocaleString('pt-BR,', {\n     timeZone: 'America/Sao_Paulo',\n     dateStyle: 'short',\n"
                },
                {
                    "date": 1651593079938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,27 @@\n \n class SendSchedulingListening {\n   private job: SchedulingModel;\n \n-  constructor(newJob: SchedulingModel) {\n-    this.job = newJob;\n+  getDateSchedulling(date: Date) {\n+    const dateString = date.toLocaleString('pt-BR,', {\n+      timeZone: 'America/Sao_Paulo',\n+      dateStyle: 'short',\n+      timeStyle: 'full'\n+    });\n+\n+    const dateSplit = dateString.split(' ');\n+    const dateFull = dateSplit[0].split('/');\n+    const timeFull = dateSplit[1].split(':');\n+\n+    const [day, month, year] = dateFull;\n+    const [hour, minute, second] = timeFull;\n+\n+    return { day, month, year, hour, minute, second };\n   }\n-\n   addListening(newJob: SchedulingModel) {\n-    this.job = newJob;\n+    const initDate =\n+      newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n   }\n }\n \n export { SendSchedulingListening };\n@@ -22,25 +35,8 @@\n function SendAction() {\n   console.log('Enviar action quando necess치rio');\n }\n \n-const getDateSchedulling = (date: Date) => {\n-  const dateString = date.toLocaleString('pt-BR,', {\n-    timeZone: 'America/Sao_Paulo',\n-    dateStyle: 'short',\n-    timeStyle: 'full'\n-  });\n-\n-  const dateSplit = dateString.split(' ');\n-  const dateFull = dateSplit[0].split('/');\n-  const timeFull = dateSplit[1].split(':');\n-\n-  const [day, month, year] = dateFull;\n-  const [hour, minute, second] = timeFull;\n-\n-  return { day, month, year, hour, minute, second };\n-};\n-\n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n \n"
                },
                {
                    "date": 1651593105155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n   }\n   addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n+    const endDate =\n+      newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n   }\n }\n \n export { SendSchedulingListening };\n"
                },
                {
                    "date": 1651593213826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,16 @@\n \n var app = express();\n const api = 'http://localhost:3308/';\n \n+type optionsSchedule = {\n+  day: string;\n+    month: string;\n+    year: string;\n+    hour: string;\n+    minute: string;\n+    second: string\n+}\n class SendSchedulingListening {\n   private job: SchedulingModel;\n \n   getDateSchedulling(date: Date) {\n@@ -23,13 +31,22 @@\n     const [hour, minute, second] = timeFull;\n \n     return { day, month, year, hour, minute, second };\n   }\n+\n+  configJob(){\n+    cron.schedule('*/1 * * * *', SendAction, {\n+      scheduled: false,\n+      timezone: 'America/Sao_Paulo'\n+    });\n+  }\n   addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n+\n+    \n   }\n }\n \n export { SendSchedulingListening };\n@@ -41,10 +58,7 @@\n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n \n-const cronJob = cron.schedule('*/1 * * * *', SendAction, {\n-  scheduled: false,\n-  timezone: 'America/Sao_Paulo'\n-});\n+const cronJob = \n \n export default cronJob;\n"
                },
                {
                    "date": 1651593450467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,20 @@\n import cron from 'node-cron';\n-import express from 'express';\n import { SchedulingModel } from '../database/model/Scheduling';\n \n-var app = express();\n-const api = 'http://localhost:3308/';\n-\n type optionsSchedule = {\n   day: string;\n-    month: string;\n-    year: string;\n-    hour: string;\n-    minute: string;\n-    second: string\n-}\n+  month: string;\n+  year: string;\n+  hour: string;\n+  minute: string;\n+  second: string;\n+};\n class SendSchedulingListening {\n   private job: SchedulingModel;\n \n   getDateSchedulling(date: Date) {\n-    const dateString = date.toLocaleString('pt-BR,', {\n+    const dateString = date.toLocaleString('pt-BR', {\n       timeZone: 'America/Sao_Paulo',\n       dateStyle: 'short',\n       timeStyle: 'full'\n     });\n@@ -32,21 +28,24 @@\n \n     return { day, month, year, hour, minute, second };\n   }\n \n-  configJob(){\n-    cron.schedule('*/1 * * * *', SendAction, {\n+  configJob(options: optionsSchedule) {\n+    const { second, minute, hour, day, month } = options;\n+\n+    const cronArg = `${second} ${minute} ${hour} ${day} ${month} *`;\n+\n+    cron.schedule(cronArg, SendAction, {\n       scheduled: false,\n       timezone: 'America/Sao_Paulo'\n     });\n   }\n+\n   addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n-\n-    \n   }\n }\n \n export { SendSchedulingListening };\n@@ -57,8 +56,4 @@\n \n // app.get('/scheduling/getAllScheduling', (req, res) => {\n //   const scheduling = req.body\n // });\n-\n-const cronJob = \n-\n-export default cronJob;\n"
                },
                {
                    "date": 1651593527963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,13 @@\n     return { day, month, year, hour, minute, second };\n   }\n \n   configJob(options: optionsSchedule) {\n-    const { second, minute, hour, day, month } = options;\n+    const second = options.second || '*';\n+    const minute = options.minute || '*';\n+    const hour = options.hour || '*';\n+    const day = options.day || '*';\n+    const month = options.month || '*';\n \n     const cronArg = `${second} ${minute} ${hour} ${day} ${month} *`;\n \n     cron.schedule(cronArg, SendAction, {\n"
                },
                {
                    "date": 1651593693980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,13 @@\n   hour: string;\n   minute: string;\n   second: string;\n };\n+\n+type receivedConfigJob = {\n+  options: optionsSchedule;\n+  callback: () => void;\n+};\n class SendSchedulingListening {\n   private job: SchedulingModel;\n \n   getDateSchedulling(date: Date) {\n@@ -28,9 +33,9 @@\n \n     return { day, month, year, hour, minute, second };\n   }\n \n-  configJob(options: optionsSchedule) {\n+  configJob({ options, callback }: receivedConfigJob) {\n     const second = options.second || '*';\n     const minute = options.minute || '*';\n     const hour = options.hour || '*';\n     const day = options.day || '*';\n@@ -48,8 +53,11 @@\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n+\n+    initDate && this.configJob(initDate);\n+    endDate && this.configJob(endDate);\n   }\n }\n \n export { SendSchedulingListening };\n"
                },
                {
                    "date": 1651593701762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     const month = options.month || '*';\n \n     const cronArg = `${second} ${minute} ${hour} ${day} ${month} *`;\n \n-    cron.schedule(cronArg, SendAction, {\n+    cron.schedule(cronArg, callback, {\n       scheduled: false,\n       timezone: 'America/Sao_Paulo'\n     });\n   }\n"
                },
                {
                    "date": 1651594055581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,10 @@\n   minute: string;\n   second: string;\n };\n \n-type receivedConfigJob = {\n-  options: optionsSchedule;\n-  callback: () => void;\n-};\n+type callbackProps = () => void;\n+\n class SendSchedulingListening {\n   private job: SchedulingModel;\n \n   getDateSchedulling(date: Date) {\n@@ -33,9 +31,9 @@\n \n     return { day, month, year, hour, minute, second };\n   }\n \n-  configJob({ options, callback }: receivedConfigJob) {\n+  configJob(options:optionsSchedule , callback: callbackProps) {\n     const second = options.second || '*';\n     const minute = options.minute || '*';\n     const hour = options.hour || '*';\n     const day = options.day || '*';\n@@ -48,24 +46,24 @@\n       timezone: 'America/Sao_Paulo'\n     });\n   }\n \n+  sendJob(){\n+\n+  }\n+\n+  removeJob(){\n+\n+  }\n+\n   addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n \n-    initDate && this.configJob(initDate);\n-    endDate && this.configJob(endDate);\n+    initDate && this.configJob(initDate, this.sendJob)};\n+    endDate && this.configJob(endDate, this.removeJob);\n   }\n }\n \n export { SendSchedulingListening };\n-\n-function SendAction() {\n-  console.log('Enviar action quando necess치rio');\n-}\n-\n-// app.get('/scheduling/getAllScheduling', (req, res) => {\n-//   const scheduling = req.body\n-// });\n"
                },
                {
                    "date": 1651594081826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n \n     return { day, month, year, hour, minute, second };\n   }\n \n-  configJob(options:optionsSchedule , callback: callbackProps) {\n+  configJob(options: optionsSchedule, callback: callbackProps) {\n     const second = options.second || '*';\n     const minute = options.minute || '*';\n     const hour = options.hour || '*';\n     const day = options.day || '*';\n@@ -46,23 +46,19 @@\n       timezone: 'America/Sao_Paulo'\n     });\n   }\n \n-  sendJob(){\n+  sendJob() {}\n \n-  }\n+  removeJob() {}\n \n-  removeJob(){\n-\n-  }\n-\n   addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n \n-    initDate && this.configJob(initDate, this.sendJob)};\n+    initDate && this.configJob(initDate, this.sendJob);\n     endDate && this.configJob(endDate, this.removeJob);\n   }\n }\n \n"
                },
                {
                    "date": 1651594284476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,21 @@\n     const month = options.month || '*';\n \n     const cronArg = `${second} ${minute} ${hour} ${day} ${month} *`;\n \n-    cron.schedule(cronArg, callback, {\n-      scheduled: false,\n-      timezone: 'America/Sao_Paulo'\n-    });\n+    try {\n+      const jobRuning = cron.schedule(cronArg, callback, {\n+        scheduled: false,\n+        timezone: 'America/Sao_Paulo'\n+      });\n+\n+      jobRuning.start();\n+    } catch (err) {\n+      const error = err as Error;\n+      console.log(`Error in ${SendSchedulingListening.name}, configJob `);\n+      console.log(err.message);\n+      console.log('....');\n+    }\n   }\n \n   sendJob() {}\n \n"
                },
                {
                    "date": 1651596196952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,5 +70,6 @@\n     endDate && this.configJob(endDate, this.removeJob);\n   }\n }\n \n-export { SendSchedulingListening };\n+const listenerSchedule = new SendSchedulingListening();\n+export { listenerSchedule };\n"
                },
                {
                    "date": 1651596238785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n   sendJob() {}\n \n   removeJob() {}\n \n-  addListening(newJob: SchedulingModel) {\n+  async addListening(newJob: SchedulingModel) {\n     const initDate =\n       newJob.start_timestamp && this.getDateSchedulling(newJob.start_timestamp);\n     const endDate =\n       newJob.end_timestamp && this.getDateSchedulling(newJob.end_timestamp);\n"
                }
            ],
            "date": 1651588804653,
            "name": "Commit-0",
            "content": "const cron = require('node-cron');\nimport express from 'express';\n\nvar app = express();\nconst api = 'http://localhost:3308/';\n\nfunction SendAction() {\n  console.log('Enviar action quando necess치rio');\n}\n\napp.get('/scheduling/getAllScheduling', (req, res) => {});\n\nmodule.exports = cron.schedule('*/1 * * * *', SendAction, {\n  scheduled: false,\n  timezone: 'America/Sao_Paulo'\n});\n"
        }
    ]
}